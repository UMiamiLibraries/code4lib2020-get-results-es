{
  
  "0": {
    "title": "",
    "content": "404 . Page not found :( . The requested page could not be found. .",
    "url": "https://umiamilibraries.github.io/code4lib2020-get-results-es/404.html",
    "relUrl": "/404.html"
  }
  ,"1": {
    "title": "Computer Setup",
    "content": "Git . Please verify you have Git installed in your computer by running the following command in a console. . $ git --version . You should get an output like the one below depending on your operating system. . git version 2.25.0.windows.1 . If you don&#39;t have Git installed, please refer to the following documentation to install it in your computer: https://git-scm.com/book/en/v2/Getting-Started-Installing-Git . Docker and Docker-Composer setup . In this workshop, you will need to have Docker and Docker-Composer installed in your computer. Please follow the below installation instructions from the Docker official documentation, for the operating system you are running. . Docker for Mac | Docker for Windows 10 (Pro, Enterprise, or Education) | Docker for Ubuntu | . To verify Docker is installed correctly, please run the following command on a terminal: . $ docker run hello-world . This command should output the following: . Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/ . You should also verify docker-compose is intalled. Please run the following command in a terminal: . $ docker-compose --version . Depending on the version of docker-compose you have installed, the output should look like this: . $ docker-compose version 1.25.0, build 0a186604 . Increase memory for Docker . For this workshop, we need to increase the amount of memory that Docker can use in the host computer. A limit of 4096 MB should be enough. . For hosts running Mac . Open Docker settings. | Select the Advanced tab. | Increase the memory limit to 4096 MB. | Docker for Mac Advanced Settings. . . For hosts running Windows . Open Docker settings. | Select the Advanced tab. | Increase the memory limit to 4096 MB. | Docker for Windows Advanced Settings. . . For hosts running Ubuntu . Open a terminal and run the following command: | sudo sysctl -w vm.max_map_count=4096000 . . Congratulations! Now you should have installed Docker and Docker-compose installed in your computer. In the next sections, we will go through the steps for creating a Dockerfile that will be used to create a Docker container to host our Symfony application. . Previous: Welcome! Next: Project Setup .",
    "url": "https://umiamilibraries.github.io/code4lib2020-get-results-es/computer-setup/",
    "relUrl": "/computer-setup/"
  }
  ,"2": {
    "title": "Welcome!",
    "content": "Next: Computer Setup .",
    "url": "https://umiamilibraries.github.io/code4lib2020-get-results-es/index.html",
    "relUrl": "/index.html"
  }
  ,"3": {
    "title": "Project Setup",
    "content": "Project Setup . Let&#39;s get started with the project setup. We are going to clone a boilerplate project from GitHub. Run the following command from a console to clone the boilerplate code into your computer: . $ git clone https://github.com/UMiamiLibraries/get-results-es-boilerplate.git . . The boilerplate structure should look like this . +-- .. |-- get-results-es-boilerplate | |-- .docker (This directory will contain all our Docker related files) | | |-- .gitkeep (This file is empty. It just helps to keep track of the empty directory) | |-- ingester-app (Here we will create our ingester app) | | |-- composer.json (composer file with the required dependencies for the ingester app) | |-- search-app | | |-- composer.json (composer file with the required dependencies for the search app) +-- .. . . Previous: Computer Setup Next: TBD .",
    "url": "https://umiamilibraries.github.io/code4lib2020-get-results-es/project-setup/",
    "relUrl": "/project-setup/"
  }
  
}